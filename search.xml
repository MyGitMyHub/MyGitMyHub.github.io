<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[MarkDown语法标题]]></title>
    <url>%2F2018%2F10%2F24%2FMarkDown%2F00%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[markdown是一种纯文本格式的标记语言。通过简单的标记语法，可以使普通文本内容具有一定的格式。]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>标题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——流程图]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F10%E6%B5%81%E7%A8%8B%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[st=>start: Start|past:>http://www.google.com[blank] e=>end: End:>http://www.google.com op1=>operation: My Operation|past op2=>operation: Stuff|current sub1=>subroutine: My Subroutine|invalid cond=>condition: Yes or No?|approved:>http://www.google.com c2=>condition: Good idea|rejected io=>inputoutput: catch something...|request st->op1(right)->cond cond(yes, right)->c2 cond(no)->sub1(left)->op1 c2(yes)->io->e c2(no)->op2->e{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options);]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>流程图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——代码]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F09%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[单行代码语法将代码包涵于 ` `之间 示例`这是单行代码 Hello World;` 效果这是单行代码 Hello World; 代码块语法代码之间分别用三个反引号包起来，且两边反引号单独占一行 示例\1234function()&#123; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; console.log(&quot;OKKK啊！！&quot;); &#125; \ 效果123function()&#123; console.log(&quot;OKKK啊！！&quot;); &#125;]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——表格]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F08%E8%A1%A8%E6%A0%BC%2F</url>
    <content type="text"><![CDATA[语法 第一行为表头，第二行分隔表头与表内容，第三行及以后为表内容。 列与列之间用‘|’隔开。 第二行指定对齐方式，默认为左对齐，在‘-’右边加上’:’为右对齐 示例12345姓名|技能|排行---|:--:|---:张三|宝刀|老一李四|大刀|老二王五|菜刀|老末 效果 姓名 技能 排行 张三 宝刀 老一 李四 大刀 老二 王五 菜刀 老末]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>表格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——列表]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F07%E5%88%97%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[无序列表语法无序列表可以用-,+,= 示例：123456- 列表内容-- 列表内容-+ 列表内容++ 列表内容+* 列表内容** 列表内容* 效果： 列表内容- 列表内容- 列表内容+ 列表内容+ 列表内容* 列表内容* 有序列表语法：数字加点 示例：1231. 列表内容12. 列表内容23. 列表内容3 效果： 列表内容1 列表内容2 列表内容3 列表嵌套:语法：上一级和下一级空三个空格 示例：12345678910111213141516- 一级无序列表内容 - 二级无序列表内容 - 二级无序列表内容 - 二级无序列表内容- 一级无序列表内容 1. 二级有序列表内容 2. 二级有序列表内容 3. 二级有序列表内容1. 一级有序列表内容 - 二级无序列表内容 - 二级无序列表内容2. 一级有序列表内容 1. 二级有序列表内容 2. 二级有序列表内容 效果： 一级无序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容 二级有序列表内容 二级有序列表内容 二级有序列表内容 一级有序列表内容 二级无序列表内容 二级无序列表内容 一级有序列表内容 二级有序列表内容 二级有序列表内容]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>列表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——超链接]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F06%E8%B6%85%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[超链接格式其实与图片的格式差不多 语法[超链接名](超链接地址 &quot;超链接title&quot;)title 可以不加 示例12[谷歌](http://www.google.cn/ &quot;谷歌&quot;)[百度](http://www.baidu.com/ &quot;百度&quot;) 谷歌百度]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>超链接</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——图片]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F05%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[语法![图片alt](图片地址 &quot;图片title&quot;) 图片alt：图片下面的文字，相当于对文字的解释。屁的我试了没有用，显示的是图片title。图片的titile:图片的标题，当鼠标移动时图片时显示内容。title可以不加。 示例![无处安放](TIM图片20180824154454.jpg &quot;愿安好！！&quot;) 效果 题外话解决如果无法显示图片： 把主体配置文件_config.yml里的 post_asset_folder: false改为true。 在hexo目录下执行npm install hexo-asset-image --save，安装这个插件。]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——分割线]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F04%E5%88%86%E5%89%B2%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[分割线有两个实现方式：1、三个或者三个以上 -三个- --- 三个以上- ---- 2、三个或者三个以上 *三个* *** 三个以上* ****]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>分割线</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——引用]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F03%E5%BC%95%E7%94%A8%2F</url>
    <content type="text"><![CDATA[在引用的文字前加&gt; 就可以了如： 123&gt; 这是引用的内容&gt; &gt; 这是引用的内容&gt; &gt; &gt; &gt; &gt; &gt; &gt; 这是引用的内容 这是引用的内容 这是引用的内容 这是引用的内容]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>引用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——字体]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F02%E5%AD%97%E4%BD%93%2F</url>
    <content type="text"><![CDATA[加粗将要加粗的文字分别用两个**包起来就可了 快捷键 ctrl + B, 如： **这是加粗的文字**这是加粗的文字 加斜线将要加斜线的文字分别用两个*包起来就可了 快捷键 ctrl + I, 如： *这是倾斜的文字*这是倾斜的文字 既加粗又加斜线这面是既加粗又加斜线的用三个*包括起来 ***这是倾斜加粗的文字***这是倾斜加粗的文字 加删除线加删除线的用两个~~包括起来 ~~这是要加删除线的文字~~这是要加删除线的文字]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>字体</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown语法——标题]]></title>
    <url>%2F2018%2F10%2F22%2FMarkDown%2F01%E6%A0%87%E9%A2%98%2F</url>
    <content type="text"><![CDATA[在想要设置为标题的文字前面加#来表示，一个#代表一级标题，如： # 这是一级标题 这是一级标题 ## 这是二级标题 这是二级标题 ### 这是三级标题 这是三级标题 #### 这是四级标题 这是四级标题 ##### 这是五级标题 这是五级标题 ###### 这是六级标题 这是六级标题]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>标题</tag>
      </tags>
  </entry>
</search>
